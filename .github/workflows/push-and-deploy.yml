name: Push Image and Deploy

on:
  push:
    branches: [ master,development ]

jobs:
  docker-deploy:
    name: Docker Build & Deploy
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: deadshot007/distroless-image-java
      CONTAINER_NAME: distroless-app-java

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Package application
        run: mvn package -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Use short SHA
        id: meta
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Set up QEMU (for cross-arch builds)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push Multi-Arch Docker Image
        env:
          SHORT_SHA: ${{ steps.meta.outputs.short_sha }}
        run: |
          echo "ðŸ”§ Building and pushing image: $IMAGE_NAME:$SHORT_SHA"
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag $IMAGE_NAME:$SHORT_SHA \
            --push \
            .

      - name: Display build summary
        run: |
          echo "âœ… image created successfully & pushed to dockerHub !!"

      - name: Deploy on Remote Server via SSH
        env:
          SHORT_SHA: ${{ steps.meta.outputs.short_sha }}
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "ðŸ“¦ Pulling Docker image"
            docker pull $IMAGE_NAME:$SHORT_SHA

            echo "ðŸ›‘ Stopping old container (if running)"
            docker stop $CONTAINER_NAME || true

            echo "ðŸ§¹ Removing old container (if exists)"
            docker rm $CONTAINER_NAME || true

            echo "ðŸš€ Running new container"
            docker run -d --name $CONTAINER_NAME -p 8080:8080 $IMAGE_NAME:$SHORT_SHA

            echo "âœ… Deployed successfully!"
