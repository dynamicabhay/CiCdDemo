name: Build and Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    container: maven:3.9.6-eclipse-temurin-17
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Verify Java and Maven versions
      run: |
        java -version
        mvn -version

    - name: Run tests (includes compilation)
      run: mvn clean test

    - name: Package application
      run: mvn package -DskipTests

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: target/surefire-reports/

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: jar-artifact
        path: target/*.jar

    - name: Display build summary
      run: |
        echo "âœ… Build completed successfully!"
        echo "ðŸ“¦ JAR file created:"
        ls -la target/*.jar

  docker-deploy:
    name: Docker Build & Deploy
    runs-on: ubuntu-latest
    needs: build

    env:
      IMAGE_NAME: deadshot007/distroless-image-java
      CONTAINER_NAME: distroless-app

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: jar-artifact
          path: target

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t $IMAGE_NAME .

      - name: Push Docker Image
        run: |
          docker push $IMAGE_NAME

      - name: Display build summary
        run: |
          echo "âœ… image created successfully & pushed to dockerHub !!"
          
